% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/src.R, R/extractors.R
\docType{methods}
\name{src_organism}
\alias{src_organism}
\alias{src_ucsc}
\alias{select_.tbl_organism}
\alias{src_tbls.src_organism}
\alias{tbl.src_organism}
\alias{transcripts_tbl}
\alias{transcripts,src_organism-method}
\alias{exons_tbl}
\alias{exons,src_organism-method}
\alias{cds_tbl}
\alias{cds,src_organism-method}
\alias{genes_tbl}
\alias{genes,src_organism-method}
\alias{promoters_tbl}
\alias{promoters,src_organism-method}
\alias{transcriptsBy_tbl}
\alias{transcriptsBy,src_organism-method}
\alias{exonsBy_tbl}
\alias{exonsBy,src_organism-method}
\alias{cdsBy_tbl}
\alias{cdsBy,src_organism-method}
\alias{intronsByTranscript_tbl}
\alias{intronsByTranscript,src_organism-method}
\alias{fiveUTRsByTranscript_tbl}
\alias{fiveUTRsByTranscript,src_organism-method}
\alias{threeUTRsByTranscript_tbl}
\alias{threeUTRsByTranscript,src_organism-method}
\title{Create a sqlite database from an org package and a txdb package}
\usage{
src_organism(txdb = NULL, dbpath = NULL)

src_ucsc(organism, genome = NULL, id = NULL, dbpath = NULL,
  verbose = TRUE)

\method{select_}{tbl_organism}(.data, ...)

\method{src_tbls}{src_organism}(x)

\method{tbl}{src_organism}(src, ...)

transcripts_tbl(x, filter = NULL)

\S4method{transcripts}{src_organism}(x, filter = NULL)

exons_tbl(x, filter = NULL)

\S4method{exons}{src_organism}(x, filter = NULL)

cds_tbl(x, filter = NULL)

\S4method{cds}{src_organism}(x, filter = NULL)

genes_tbl(x, filter = NULL)

\S4method{genes}{src_organism}(x, filter = NULL)

promoters_tbl(x, upstream, downstream, filter = NULL)

\S4method{promoters}{src_organism}(x, upstream, downstream, filter = NULL)

transcriptsBy_tbl(x, by = c("gene", "exon", "cds"), filter = NULL)

\S4method{transcriptsBy}{src_organism}(x, by = c("gene", "exon", "cds"),
  filter = NULL)

exonsBy_tbl(x, by = c("tx", "gene"), filter = NULL)

\S4method{exonsBy}{src_organism}(x, by = c("tx", "gene"), filter = NULL)

cdsBy_tbl(x, by = c("tx", "gene"), filter = NULL)

\S4method{cdsBy}{src_organism}(x, by = c("tx", "gene"), filter = NULL)

intronsByTranscript_tbl(x, filter = NULL)

\S4method{intronsByTranscript}{src_organism}(x, filter = NULL)

fiveUTRsByTranscript_tbl(x, filter = NULL)

\S4method{fiveUTRsByTranscript}{src_organism}(x, filter = NULL)

threeUTRsByTranscript_tbl(x, filter = NULL)

\S4method{threeUTRsByTranscript}{src_organism}(x, filter = NULL)
}
\arguments{
\item{txdb}{character(1) naming a \code{TxDb.*} package (e.g.,
\code{TxDb.Hsapiens.UCSC.hg38.knownGene}) or \code{TxDb}
object instantiating the content of a \code{TxDb.*} pacakge.}

\item{dbpath}{path and file name where SQLite file will be accessed
or created if not already exists.}

\item{organism}{organism name}

\item{genome}{genome name}

\item{id}{choose from "knownGene", "ensGene" and "refGene"}

\item{verbose}{logical. Should R report extra information on progress? 
Default is TRUE.}

\item{.data}{A tbl.}

\item{...}{Comma separated list of unquoted expressions. You can treat 
variable names like they are positions. Use positive values to select 
variables; use negative values to drop variables.}

\item{x}{A src_organism object}

\item{src}{A src_organism object}

\item{filter}{Either NULL or a named list of vectors to be used to
restrict the output.}

\item{upstream}{For \code{promoters()}: An integer(1) value indicating
the number of bases upstream from the transcription start site.}

\item{downstream}{For \code{promoters()}: An integer(1) value indicating
the number of bases downstream from the transcription start site.}

\item{by}{One of "gene", "exon", "cds" or "tx". Determines the grouping.}
}
\value{
A dplyr \code{src_sqlite} instance representing the data
    tables.
}
\description{
The database provides a convenient way to map between gene, transcript,
and protein identifiers.

Generic functions to extract genomic features from an object.
}
\details{
This function is meant to be a building block for
\code{\link{src_organism}}, which provides an integrated
presentation of identifiers and genomic coordinates.

Create a dplyr database integrating org.* and TxDb.* information
}
\examples{
# create human sqlite database with TxDb.Hsapiens.UCSC.hg38.knownGene and 
# corresponding org.Hs.eg.db
organism <- src_organism("TxDb.Hsapiens.UCSC.hg38.knownGene")
src_tbls(organism)
tbl(organism, "id")

# create human sqlite database using hg38 genome
human <- src_ucsc("human")

# Look at all available tables
src_tbls(organism)

# Look at data in table "id"
tbl(organism, "id")

organism <- src_ucsc("human")
filters <- list(symbol=c("PTEN", "BRCA1"),
               entrez="5728",
               go=c("GO:0000079", "GO:0001933"))
transcripts(organism, filters)

exons(organism, filter=list(symbol="PTEN"))

promoters(organism, upstream=100, downstream=50,
          filter = list(symbol="BRCA1"))

transcriptsBy(organism, by = "gene", filter = list(symbol="PTEN"))

exonsBy(organism, by = "gene", filter = list(symbol="PTEN"))

cdsBy(organism, by = "gene", filter = list(symbol="PTEN"))

intronsByTranscript(organism, filter = list(symbol="PTEN"))

fiveUTRsByTranscript(organism, filter = list(symbol="PTEN"))

threeUTRsByTranscript(organism, filter = list(symbol="PTEN"))

}

